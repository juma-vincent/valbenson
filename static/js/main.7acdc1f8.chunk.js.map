{"version":3,"sources":["components/footer/footer.jsx","components/header/header.jsx","components/videoBackground/videoBackground.jsx","pages/homepage/homepage.jsx","components/button/customButton.jsx","components/projectItem/projectItem.jsx","pages/projectspage/projectspage.jsx","App.js","redux/project/project.actions.js","serviceWorker.js","projectData.js","redux/project/project-reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["Footer","className","Header","src","alt","to","VideoBackground","autoPlay","muted","loop","type","Homepage","CustomButton","link","children","href","ProjectItem","title","imageUrls","description","website","github","map","imageUrl","id","key","url","ProjectsPage","projects","Object","keys","App","getProjectData","this","props","exact","path","component","render","Component","connect","project","dispatch","Boolean","window","location","hostname","match","projectData","grancents","smartbrain","robofriends","INITIAL_STATE","projectReducer","state","action","combineReducers","middlewares","logger","store","createStore","rootReducer","applyMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7acdc1f8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./footer.scss\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer-container\">\r\n      <h4 className=\"title\"> Contact Information</h4>\r\n      <small> Email: vinsoncode@gmail.com </small> <br />\r\n      <small>Phone: +254712062516</small>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport \"./header.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header-container\">\r\n      <div className=\"logo\">\r\n        <img src=\"/images/logo.png\" alt=\"\" />\r\n      </div>\r\n      <div className=\"options-container\">\r\n        <Link to=\"/\" className=\"option\">\r\n          HOME\r\n        </Link>\r\n        <Link to=\"/projects\" className=\"option\">\r\n          PROJECTS\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./videoBackground.scss\";\r\n\r\nconst VideoBackground = () => {\r\n  return (\r\n    <div className=\"video-background\">\r\n      <video className=\"video-content\" autoPlay muted loop>\r\n        <source src=\"/videos/bgvideo1.mp4\" type=\"video/mp4\" />\r\n      </video>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoBackground;\r\n","import React from \"react\";\r\nimport \"./homepage.scss\";\r\nimport VideoBackground from \"../../components/videoBackground/videoBackground\";\r\n\r\nconst Homepage = () => {\r\n  return (\r\n    <div className=\"homepage-container\">\r\n      <div className=\"background-image\">\r\n        <div className=\"profile-image\"></div>\r\n        <div className=\"profile-text\">Software Developer</div>\r\n      </div>\r\n\r\n      <div className=\"main-section\">\r\n        <VideoBackground />\r\n\r\n        <div className=\"about-container\">\r\n          <div className=\"title\">About Me</div>\r\n          <div className=\"content\">\r\n            <div className=\"image-container\"></div>\r\n            <div className=\"description\">\r\n              Hi, my name is Vincent Juma, a self taught front-end developer,\r\n              with immense experience in React JS and Redux Saga. I enjoy\r\n              building solutions that rightfully meets the user's expectations\r\n              which has lasting value. I'm also passionate about contributing to\r\n              open source projects which have significantly added more to my\r\n              programming repetoire.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","import React from \"react\";\r\nimport \"./customButton.scss\";\r\n\r\nconst CustomButton = ({ link, children }) => {\r\n  return (\r\n    <div className=\"button-container\">\r\n      <a href={link}>{children} &rarr;</a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomButton;\r\n","import React from \"react\";\r\nimport \"./projectItem.scss\";\r\nimport CustomButton from \"../button/customButton\";\r\n\r\nconst ProjectItem = ({ title, imageUrls, description, website, github }) => {\r\n  return (\r\n    <div className=\"project-item-container\">\r\n      <div className=\"description\">\r\n        <h3>{title}</h3>\r\n\r\n        <div>{description}</div>\r\n        <div>\r\n          <div>\r\n            <CustomButton\r\n              className=\"link\"\r\n              link={website}\r\n              children={`See Live`}\r\n            />\r\n          </div>\r\n          <div>\r\n            <CustomButton link={github} children={`Source Code`} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"images-container\">\r\n        {imageUrls.map((imageUrl) => (\r\n          <img\r\n            className={imageUrl.id}\r\n            alt=\"\"\r\n            key={imageUrl.id}\r\n            src={imageUrl.url}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectItem;\r\n","import React from \"react\";\r\nimport \"./projectspage.scss\";\r\nimport ProjectItem from \"../../components/projectItem/projectItem\";\r\nimport VideoBackground from \"../../components/videoBackground/videoBackground\";\r\n\r\nconst ProjectsPage = ({ projects }) => {\r\n  return (\r\n    <div className=\"projects-container\">\r\n      <VideoBackground />\r\n      <div className=\"projects-heading\">MY PAST REACT JS PROJECTS</div>\r\n      {Object.keys(projects).map((key) => (\r\n        <ProjectItem\r\n          key={projects[key].id}\r\n          title={projects[key].title}\r\n          description={projects[key].description}\r\n          imageUrls={projects[key].imageUrls}\r\n          website={projects[key].website}\r\n          github={projects[key].github}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectsPage;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Footer from \"./components/footer/footer\";\r\nimport Header from \"./components/header/header\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Homepage from \"./pages/homepage/homepage\";\r\nimport ProjectsPage from \"./pages/projectspage/projectspage\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProjectData } from \"./redux/project/project.actions\";\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    const { getProjectData } = this.props;\r\n    getProjectData();\r\n  }\r\n\r\n  render() {\r\n    const { projects } = this.props;\r\n    return (\r\n      <div>\r\n        <Header />\r\n\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Homepage} />\r\n          <Route\r\n            path=\"/projects\"\r\n            render={() => <ProjectsPage projects={projects} />}\r\n          />\r\n        </Switch>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ project: { projects } }) => ({\r\n  projects,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getProjectData: () => dispatch(getProjectData()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","export const getProjectData = () => ({\r\n  type: \"GET_PROJECT_DATA\",\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","export const projectData = {\r\n  grancents: {\r\n    id: 1,\r\n    title: \"Grancents Collection\",\r\n    description: `\r\n    An e-commerce application online store that allows users to shop for outfits of their choice. \r\n   `,\r\n\r\n    imageUrls: [\r\n      { id: \"one\", url: \"/images/grancents1.jpg\" },\r\n      { id: \"two\", url: \"/images/grancents2.jpg\" },\r\n      { id: \"three\", url: \"/images/grancents3.jpg\" },\r\n    ],\r\n    website: `http://grancents-collection.herokuapp.com/`,\r\n    github: `https://github.com/juma-vincent/grancents-collection`,\r\n  },\r\n  smartbrain: {\r\n    id: 2,\r\n    title: \"Smart Brain\",\r\n\r\n    description: `\r\n     A face recognition  application that identifies faces on an image submitted to it.\r\n    `,\r\n    imageUrls: [\r\n      { id: \"one\", url: \"/images/smartbrain1.jpg\" },\r\n      { id: \"two\", url: \"/images/smartbrain2.jpg\" },\r\n      { id: \"three\", url: \"/images/smartbrain3.jpg\" },\r\n    ],\r\n    github: `https://github.com/juma-vincent/smart-brain-frontend`,\r\n    website: `https://smart-brain001.herokuapp.com/`,\r\n  },\r\n  robofriends: {\r\n    id: 3,\r\n\r\n    title: \"Robofriends\",\r\n    description: `\r\n    A list of profiles with robot images fetched from a public API built in Redux.\r\n    `,\r\n\r\n    imageUrls: [\r\n      // { id: \"one\", url: \"/images/robofriends1.jpg\" },\r\n      { id: \"two\", url: \"/images/robofriends2.jpg\" },\r\n      { id: \"three\", url: \"/images/robofriends3.jpg\" },\r\n    ],\r\n    website: `https://juma-vincent.github.io/robofriends/`,\r\n    github: `https://github.com/juma-vincent/robofriends/`,\r\n  },\r\n};\r\n","import { projectData } from \"../../projectData\";\r\n\r\nconst INITIAL_STATE = {\r\n  projects: {},\r\n};\r\n\r\nconst projectReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"GET_PROJECT_DATA\":\r\n      return {\r\n        ...state,\r\n        projects: projectData,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default projectReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport projectReducer from \"./project/project-reducer\";\r\n\r\nexport default combineReducers({\r\n  project: projectReducer,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport rootReducer from \"./root-reducer\";\r\n\r\nconst middlewares = [logger];\r\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"tachyons\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}